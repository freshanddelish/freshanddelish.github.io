{"version":3,"sources":["webpack:///./src/templates/tag.js"],"names":["HeaderOverrides","_ref","title","url","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","property","content","TagTemplate","_ref2","pageContext","data","location","tag","_data$allMarkdownRema","allMarkdownRemark","edges","totalCount","config","siteTitle","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","href","_components_Container__WEBPACK_IMPORTED_MODULE_6__","_components_CardList__WEBPACK_IMPORTED_MODULE_8__","map","_ref3","node","slug","fields","_node$frontmatter","frontmatter","featuredImage","excerpt","_components_Card__WEBPACK_IMPORTED_MODULE_7__","key","body","pageQuery"],"mappings":"2PAYMA,EAAkB,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,MAAOC,EAATF,EAASE,IAAT,OACtBC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,KACED,EAAAC,EAAAC,cAAA,aAAQJ,GACRE,EAAAC,EAAAC,cAAA,QACEE,SAAS,WACTC,QAASP,IAEXE,EAAAC,EAAAC,cAAA,QAAME,SAAS,SAASC,QAASN,MA6BtBO,UA1BK,SAAAC,GAAqC,IAAlCC,EAAkCD,EAAlCC,YAAaC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,SAChCC,EAAQH,EAARG,IAD+CC,EAEzBH,EAAKI,kBAA3BC,EAF+CF,EAE/CE,MACFhB,GAHiDc,EAExCG,WACJ,QAAWJ,EAAX,MAAoBK,IAAOC,WAGtC,OACEjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQpB,MAAK,gBAAkBa,GAC7BX,EAAAC,EAAAC,cAACN,EAAD,CAAiBE,MAAOA,EAAOC,IAAKW,EAASS,OAE7CnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,KACEpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACGP,EAAMQ,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACJC,EAASD,EAAKE,OAAdD,KADeE,EAEUH,EAAKI,YAA9B9B,EAFe6B,EAEf7B,MAAO+B,EAFQF,EAERE,cACPC,EAAYN,EAAZM,QACR,OACE9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAMC,IAAKP,EAAM1B,IAAK0B,EAAM3B,MAAOA,EAAOmC,KAAMH,EAASD,cAAeA,UAW/E,IAAMK,EAAS","file":"component---src-templates-tag-js-da2a73e2352ff7e39bc0.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\n\nimport Layout from '../components/Layout'\nimport Container from '../components/Container'\nimport Card from '../components/Card'\nimport CardList from '../components/CardList'\nimport config from '../utils/siteConfig'\n\n\nconst HeaderOverrides = ({title, url}) => (\n  <Helmet>\n    <title>{title}</title>\n    <meta\n      property=\"og:title\"\n      content={title}\n    />\n    <meta property=\"og:url\" content={url} />\n  </Helmet>);\n\nconst TagTemplate = ({ pageContext, data, location }) => {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark\n  const title = `Tag: ${tag} - ${config.siteTitle}`;\n  const tagHeader = `${totalCount} recipe${ totalCount === 1 ? \"\" : \"s\"} tagged with \"${tag}\"`\n\n  return (\n    <Layout title={`Tagged with: ${tag}`}>\n      <HeaderOverrides title={title} url={location.href} />\n      \n      <Container>\n        <CardList>\n          {edges.map(({ node }) => {\n            const { slug } = node.fields;\n            const { title, featuredImage } = node.frontmatter;\n            const { excerpt } = node;\n            return (\n              <Card key={slug} url={slug} title={title} body={excerpt} featuredImage={featuredImage} />\n            )\n          })}\n        </CardList>\n      </Container>\n    </Layout>\n  );\n}\n\nexport default TagTemplate\n\nexport const pageQuery = graphql`\n  query($tag: String!) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges { \n        node { \n          fields {\n            slug\n          }\n          frontmatter { \n            title\n            featuredImage {\n              childImageSharp {\n                fluid(toFormat: JPG) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          excerpt: excerptHtml\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}